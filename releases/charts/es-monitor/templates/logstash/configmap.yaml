{{- if .Values.output.elasticsearch.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-pipeline
data:
  logstash.yml: |
    http.host: 0.0.0.0
    config.reload.automatic: true
    pipeline.ecs_compatibility: disabled
  pipelines.yml: |
    - pipeline.id: prometheus
      path.config: "/usr/share/logstash/pipeline/prometheus"
      queue.type: persisted
  prometheus.conf: |
    input {
      beats {
          id => "beats"
          port => 5044
          add_field => [ "[client][agent]", "prometheus" ]
      }
    }
    filter {
      mutate {
        gsub => ["message", "\\xE9", 'e']
      }
    }
    filter {
    {{- if .Values.indexMapper }}
    if [prometheus][labels][index] {
      {{- range $i, $patterns := .Values.indexMapper }}
      {{- if and $patterns.indexPatterns $patterns.fields }}
      {{- range $i, $pattern := $patterns.indexPatterns }}
      grok {
        match => { '[prometheus][labels][index]' => "{{ $pattern | replace "*" "%{GREEDYDATA}" }}" }
        {{- range $key, $val := $patterns.fields }}
        add_field => [ '[prometheus][labels][{{ $key }}]', "{{ $val }}" ]
        {{- end }}
      }
      {{- end }}
      {{- end }}
      {{- end }}
    }
    {{- end }} 
    }
    output {
      elasticsearch {
        index => "{{ .Values.output.elasticsearch.index | default "%{[client][agent]}-%{+YYYY-MM-dd}" }}"
        hosts => ["{{ .Values.output.elasticsearch.host | default "elasticsearch" }}:{{ .Values.output.elasticsearch.port | default "9200" }}"]
        user => "{{ .Values.output.elasticsearch.username | default "elastic" }}"
        password => "{{ .Values.output.elasticsearch.password | default "password" }}"
        ssl_certificate_verification => {{ .Values.output.elasticsearch.skipSsl | ternary "false" "true" }}
      }
    }
{{- end }}